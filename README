                            TESTLAB OUTBREAK

 
  This is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as
  published by the Free Software Foundation; either version 2
  of the License, or (at your option) any later version.
 
   This software is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.
 
 
________________________________________________________________________________
                            PURPOSE
                            
This is a test run of Spread. Spread is a Java app supporting processing and 
visualizations of BEAST's phylogeographic models. Contains visualisations 
(templates), wrapped in a simplistic gui. Supported visualisations include 
embedded Processing applets and KML output for viewing in Google Earth.

BEAST software: http://beast.bio.ed.ac.uk/Main_Page

________________________________________________________________________________
                            COMPILING

Depends on the following libraries:

jebl.jar  
org.boehn.kmlframework_20090320.jar
core.jar
colt.jar

________________________________________________________________________________
                              TODO

* improve GUI looks & feels
  - add indeterminate progress bar + progress messages in terminal 
    to all tabs
* catch exceptions
  - Runtime exceptions for "attribute missing from node" is not caught
    and resulting error mesage not displayed in scrollable terminal
* implement TimeSlicer template
  - template is organized around HashMap, first trees are being analyzed and values 
    (List<Coordinates>) collected with keys (sliceTimes). 
  - if the HashMap already has a key the appropriate list is grown, otherwise new list 
    is created and added to the collection
  - the resulting map is then iterated through, and Coordinates are fed to the 
    contouring algorithm returning paths
  - resulting paths are used to create polygons and written to the kml file     
  - there is a memory leak in Polygons method, causes java.lang.outOfMemory
    crash










