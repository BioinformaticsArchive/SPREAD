h1. SPREAD

 
  This is free software; you can redistribute it and/or modify
  it under the terms of the GNU Lesser General Public License as
  published by the Free Software Foundation; either version 2
  of the License, or (at your option) any later version.
 
   This software is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   "GNU Lesser General Public License":http://www.gnu.org/licenses/lgpl.html for more details.
 
h1. PURPOSE
                            
SPREAD is a Java program supporting processing and visualizations of BEAST's phylogeographic models ("BEAST software":http://beast.bio.ed.ac.uk/Main_Page). 

Contains visualisations (templates), wrapped in a user friendly interface. Supported visualisations include embedded Processing applets and KML output for viewing in "Google Earth":http://www.google.com/earth or any other virtual globe software capable of reading the format.


h1. DOWNLOAD
                            
Compiled application can be downloaded from "here":http://dl.dropbox.com/u/5169517/spread.jar

h1. COMPILING

Depends on the following libraries:

* jebl.jar
* org.boehn.kmlframework_20090320.jar
* core.jar
* colt.jar
* ColorPicker.jar
* quaqua.jar (libquaqua64.jnilib, libquaqua.jnilib)

Before exporting to a runnable jar change line 12 in templates.MapBackground.java:
boolean fromJar = false 
        to 
boolean fromJar = true 

h1. TODO

* check for branches not annotated in TreeAnnotator
* TimeSlicerTab
   - Check if Animation Thread is still running and only then release progress bar (currently it gets released when AnalyzeTrees method stops running)
* Processing applets
   - We could draw the lines along great circle arcs or rhumb lines, this would require getting the code in kml generator class to work with processing
* Add cannot impute, no precision attribute warning message in Time Slicer
* Add a list with default operations and place check-marks next to them before a map comes up
* Verify input with regular expressions
* add main methods for testing the classes
* switch to Callable tasks





